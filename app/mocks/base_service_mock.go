// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// BaseServiceInterface is an autogenerated mock type for the BaseServiceInterface type
type BaseServiceInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: c, condition, model
func (_m *BaseServiceInterface) Create(c *gin.Context, condition map[string]interface{}, model interface{}) {
	_m.Called(c, condition, model)
}

// Delete provides a mock function with given fields: c, model
func (_m *BaseServiceInterface) Delete(c *gin.Context, model interface{}) {
	_m.Called(c, model)
}

// GetDetail provides a mock function with given fields: c, model, resModel
func (_m *BaseServiceInterface) GetDetail(c *gin.Context, model interface{}, resModel interface{}) {
	_m.Called(c, model, resModel)
}

// IsExist provides a mock function with given fields: tx, c, condition, model
func (_m *BaseServiceInterface) IsExist(tx *gorm.DB, c *gin.Context, condition map[string]interface{}, model interface{}) {
	_m.Called(tx, c, condition, model)
}

// Pagination provides a mock function with given fields: c, field, model, resModel
func (_m *BaseServiceInterface) Pagination(c *gin.Context, field interface{}, model interface{}, resModel interface{}) {
	_m.Called(c, field, model, resModel)
}

// Updates provides a mock function with given fields: c, model, body
func (_m *BaseServiceInterface) Updates(c *gin.Context, model interface{}, body interface{}) {
	_m.Called(c, model, body)
}

// NewBaseServiceInterface creates a new instance of BaseServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBaseServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *BaseServiceInterface {
	mock := &BaseServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
