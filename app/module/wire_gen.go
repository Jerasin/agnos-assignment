// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package module

import (
	"agnos-assignment/app/controller"
	"agnos-assignment/app/service"
	"github.com/google/wire"
)

// Injectors from patient_injector.go:

func PatientModuleInit() *PatientModule {
	patientService := service.PatientServiceInit()
	patientContoller := controller.PatientContollerInit(patientService)
	patientModule := NewPatientModule(patientContoller, patientService)
	return patientModule
}

// patient_injector.go:

var patientCtrlSet = wire.NewSet(controller.PatientContollerInit, wire.Bind(new(controller.PatientContollerInterface), new(*controller.PatientContoller)))

var patientSvcSet = wire.NewSet(service.PatientServiceInit, wire.Bind(new(service.PatientServiceInterface), new(*service.PatientService)))

type PatientModule struct {
	PatientCtrl controller.PatientContollerInterface
	PatientSvc  service.PatientServiceInterface
}

func NewPatientModule(
	patientCtrl controller.PatientContollerInterface,
	patientSvc service.PatientServiceInterface,
) *PatientModule {
	return &PatientModule{
		PatientCtrl: patientCtrl,
		PatientSvc:  patientSvc,
	}
}
